{% extends 'main.html.twig' %}

{% block moduletitle %}Expelled Students{% endblock %}
{% block main %}
    <form name='searchform'>
        <div>
            <label for="search_value">Search:</label>
            <input type='text' name='search_value' id='search_value' value='' size='15'>&nbsp;
            <select name='search_field' id='search_field'>
                <option value='system_id'>SIS Id</option>
                <option value='firstname_turkmen'>Firstname</option>
                <option value='lastname_turkmen'>Lastname</option>
            </select>&nbsp;
            <input type='button' id='search_button' value='Search' onclick='search();'>&nbsp;&nbsp;&nbsp;&nbsp;
            <select name='group_field' id='group_field'>
                {% for group in groups %}
                    <option value='{{ group.systemId }}'>{{ group.letterCode }}</option>
                {% endfor %}}
            </select>&nbsp;&nbsp;
            <input type='button' id='show_group_button' value='Show group' onclick='show_group();'>
        </div>
    </form> <a href="/faculty/expelledstudent/new">New</a>
    <div id='error'>
    </div>
    <div id='main'>
    </div>
{% endblock %}
{% block customjs %}
    <script type="text/javascript">
        $(document).ready(function () {
            row_count = 0;
            $('#main').jtable({
                title: 'Expelled Students',
                paging: true,
                pageSize: 35,
                sorting: true,
                startIndex: 0,
                defaultSorting: 'expelled_student.system_id ASC',
                actions: {
                    listAction: function (postData, jtParams) {
                        return $.Deferred(function ($dfd) {
                            $.ajax({
                                url: '/faculty/expelledstudent/list/' + jtParams.jtStartIndex + '/' + jtParams.jtPageSize + '/' + jtParams.jtSorting
        {% if (search_field is defined and search_field is not empty) and (search_value is defined and search_value is not empty) %}
                                            + '/' + '{{ search_field|raw }}' + '/' + '{{ search_value|raw }}'
        {% endif %},
                                    type: 'POST',
                                    dataType: 'json',
                                    data: postData,
                                    success: function (data) {
                                        console.log(jtParams.jtSorting);
                                        $dfd.resolve(data);
                                        row_count = 0;
                                    },
                                    error: function (data) {
                                        //console.log(data);
                                        $dfd.reject();
                                    }
                                });
                            });
                        }
                        /*,
                         createAction: function (postData) {
                         return $.Deferred(function ($dfd) {
                         $.ajax({
                         url: '/faculty/expelledstudent/create',
                         type: 'POST',
                         dataType: 'json',
                         data: postData,
                         success: function (data) {
                         console.log(data);
                         $dfd.resolve(data);
                         },
                         error: function (data) {
                         console.log(data);
                         $dfd.reject();
                         }
                         });
                         });
                         },
                         updateAction: function (postData) {
                         return $.Deferred(function ($dfd) {
                         $.ajax({
                         url: '/faculty/expelledstudent/update',
                         type: 'POST',
                         dataType: 'json',
                         data: postData,
                         success: function (data) {
                         console.log(postData);
                         $dfd.resolve(data);
                         },
                         error: function (data) {
                         console.log(data);
                         $dfd.reject();
                         }
                         });
                         });
                         }*/
        {% if is_granted("ROLE_ADMIN") %},
                        deleteAction: function (postData) {
                            return $.Deferred(function ($dfd) {
                                $.ajax({
                                    url: '/faculty/expelledstudent/delete',
                                    type: 'POST',
                                    dataType: 'json',
                                    data: postData,
                                    success: function (data) {
                                        console.log(data);
                                        $dfd.resolve(data);
                                    },
                                    error: function (data) {
                                        $dfd.reject();
                                    }
                                });
                            });
                        }
        {% endif %}
                    },
                    fields: {
                        row_number: {
                            title: 'No',
                            create: false,
                            edit: false,
                            width: '3%'
                        },
                        id: {
                            title: 'ID',
                            width: '3%',
                            key: true,
                            create: false,
                            edit: false,
                            list: true
                        },
                        system_id: {
                            title: 'System ID',
                            type: 'text',
                            width: '3%',
                            list: true
                        },
                        student_photo: {
                            title: 'Photo',
                            width: '5%',
                            create: false,
                            edit: false,
                            display: function (data) {
                                return "<img src='/build/photos/expelled/" + data.record.system_id + ".jpg' width='60'>";
                            },
                            list: true
                        },
                        firstname_turkmen: {
                            title: 'Firstname',
                            type: 'text',
                            width: '5%',
                            list: true
                        },
                        lastname_turkmen: {
                            title: 'Lastname',
                            type: 'text',
                            width: '5%',
                            list: true
                        },
                        patronym_turkmen: {
                            title: 'Patronym',
                            type: 'text',
                            width: '5%',
                            list: true
                        },
                        previous_lastname_turkmen: {
                            title: 'Previous Lastname',
                            type: 'text',
                            width: '5%',
                            list: false
                        },
                        student_group_id: {
                            title: 'Group',
                            options: '/valuepairs/group/id/letter_code/system_id ASC',
                            width: '4%',
                            defaultValue: '0',
                            list: true
                        },
                        birth_date: {
                            title: 'Birth date',
                            type: 'date',
                            displayFormat: 'dd.mm.yy',
                            width: '5%',
                            list: true
                        },
                        gender: {
                            title: 'Gender',
                            options: {'0': 'Female', '1': 'Male'},
                            width: '5%',
                            list: true
                        },
                        firstname_english: {
                            title: 'Firstname EN',
                            type: 'text',
                            width: '5%',
                            list: false
                        },
                        lastname_english: {
                            title: 'Lastname EN',
                            type: 'text',
                            width: '5%',
                            list: false
                        },
                        previous_lastname_english: {
                            title: 'Previous Lastname EN',
                            type: 'text',
                            width: '5%',
                            list: false
                        },
                        patronym_english: {
                            title: 'Patronym EN',
                            type: 'text',
                            width: '5%',
                            list: false
                        },
                        actions: {
                            title: 'Actions',
                            sorting: false,
                            list: true,
                            edit: false,
                            create: false,
                            display: function (data)
                            {
                                info = "";
        {% if is_granted("ROLE_SPECIALIST") %}
                                info += "<a href='/faculty/expelledstudent/edit/" + data.record.id + "'>Edit</a>";
                                info += "<br><a href='/faculty/expelledstudent/info/" + data.record.system_id + "'>Info</a>";
                                info += "<br><a href='javascript:reinstate(" + data.record.system_id + ");'>Reinstate</a>";
        {% endif %}
                                return info;
                            }

                        }
                    }
                });
                $('#main').jtable('load');
            });
            function search()
            {
                window.location.href = "/faculty/expelledstudent/search/" + $('#search_field').val() + "/" + $('#search_value').val();
            }
            function show_group()
            {
                window.location.href = "/faculty/expelledstudent/search/group_code/" + $('#group_field').val();
            }
            function showerror(str)
            {
                $('#error').html(str);
            }
            function reinstate(student_id)
            {
                var group_id = prompt("Enter group system id to which you want to reinstate the student?)", '0');
                if (parseInt(group_id) > 0)
                {
                    window.location.href = "/faculty/expelledstudent/reinstate/" + student_id + "/" + group_id;
                } else {
                    alert('You need to select a valid group system id');
                }
            }
    </script>
{% endblock %}