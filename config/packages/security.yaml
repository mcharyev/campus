security:
    encoders:
        # Our user class and the algorithm we'll use to encode passwords
        # 'auto' means to let Symfony choose the best possible password hasher (Argon2 or Bcrypt)
        # https://symfony.com/doc/current/security.html#c-encoding-the-user-s-password
        App\Entity\User: 'auto'

    providers:
        # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
        # In this example, users are stored via Doctrine in the database
        # To see the users at src/App/DataFixtures/ORM/LoadFixtures.php
        # To load users from somewhere else: https://symfony.com/doc/current/security/custom_provider.html
        database_users:
            entity: { class: App\Entity\User, property: username }
    # https://symfony.com/doc/current/security.html#initial-security-yml-setup-authentication
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            # this firewall applies to all URLs
            pattern: ^/
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /
            # but the firewall does not require login on every page
            # denying access is done in access_control or in your controllers
            anonymous: ~
            switch_user: true
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: /logout
                target: /logout_message

    # Used to restrict access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/faculty/$, roles: ROLE_USER }
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/iuhdplus/$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/publiclibrary/$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/$, roles: ROLE_USER }
        #- { path: ^/library/libraryitem/$, roles: ROLE_LIBRARY }
        # this is a catch-all for the admin area
        # additional security lives in the controllers
        #- { path: '^/(%app_locales%)/admin', roles: ROLE_ADMIN }

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER, ROLE_DEAN, ROLE_SPECIALIST, ROLE_HR, ROLE_TEACHER, ROLE_STUDENT, ROLE_SECURITY, ROLE_LIBRARY, ROLE_USEREDITOR, ROLE_STUDENTEDITOR, ROLE_EDMS_MANAGER, ROLE_LLDDEAN
        ROLE_STUDENTEDITOR: ROLE_USER
        ROLE_USEREDITOR: ROLE_USER
        ROLE_SPECIALIST: ROLE_DEAN, ROLE_LLDDEAN, ROLE_DEPARTMENTHEAD, ROLE_PROGRAMHEAD
        ROLE_STUDENT: ROLE_USER
        ROLE_TEACHER: ROLE_USER
        ROLE_LIBRARY: ROLE_USER
        ROLE_HR: ROLE_USER, ROLE_SECURITY
        ROLE_DEAN: ROLE_USER, ROLE_TEACHER, ROLE_DEPARTMENTHEAD
        ROLE_DEPARTMENTHEAD: ROLE_TEACHER
        ROLE_PROGRAMHEAD: ROLE_TEACHER
        ROLE_SECURITY: ROLE_USER
        ROLE_EDMS_MANAGER: ROLE_USER
        ROLE_LLDDEAN: ROLE_DEAN